package application;
	
import java.io.IOException;
import java.sql.SQLException;

import entity.House;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Menu;
import javafx.scene.control.MenuBar;
import javafx.scene.control.MenuItem;
import javafx.scene.control.ScrollPane;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseButton;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.shape.Circle;
import javafx.stage.Modality;
import javafx.stage.Stage;


public class Main extends Application {
	
	@FXML private BorderPane root;		
	@FXML private StackPane stackPane;
	@FXML private ScrollPane scrollPane;
	@FXML private Pane polygonPane;
	
	@FXML private MenuBar menuBar;
	@FXML private Menu menuRegion;
	@FXML private MenuItem regionAddHouseItem, regionHouseMembers;
	
	private Image map;
	private ImageView mapView;
	private HouseList houseList;
	
	@FXML
	private void initialize() {		
		houseList = new HouseList();		
		// пробегаем циклом по регионам
		for (RegionWesteros r : RegionWesteros.values()) {
			// добавл€ем контуры регионов
			polygonPane.getChildren().add(r.getPolygon());			
			// формируем меню
			Menu menu = new Menu(r.getName());
			menuRegion.getItems().add(menu);
				for (House house : houseList.getList().values()) {
					if (house.getRegion().equals(r.getName())) {
						MenuItem itemHouse = new MenuItem(house.getName());
						menu.getItems().add(itemHouse);
						itemHouse.setOnAction(ev);
					}	
				}
		}
		
		map = new Image(getClass().getResourceAsStream("map.jpg"));
		mapView = new ImageView();	
		mapView.setImage(map);
		mapView.setOpacity(0.8);
		polygonPane.getChildren().add(mapView);
		scrollPane.setContent(polygonPane);		
		scrollPane.setMaxSize(map.getWidth(), map.getHeight());
		
		
		mapView.setOnMouseMoved(e -> {   // движение мыши по карте        	
			
			for (RegionWesteros r : RegionWesteros.values()) {
				if (r.getPolygon().contains(e.getX(), e.getY())) {
					r.getPolygon().setOpacity(1); // если попали на полигон, подсвечиваем облать
				} else {
					r.getPolygon().setOpacity(0); // иначе пр€чем область, дела€ ее непрозрачной
				}
			}	
		});
		
		// обработка щелчка мыши по карте
		mapView.setOnMouseClicked(e -> {		
			if (e.getButton() == MouseButton.SECONDARY) {   // нажата права€ кнопка мыши
				int option = 0;
				DialogWindow dialog = new DialogWindow(new String[] {"Yes", "No", "I`m not sure:)"}, "Question", "You clicked on the map. Would add a house on this place?", false, 350, 100);
		    	dialog.showAndWait();
		    	option = dialog.getOption();          // если соглашаемс€ с созданием ƒома
		    	if (option == 1) {
		    		House h = new House();            // создаем новый ƒом
		    		h.setX((int)e.getX());            // присваиваем ему координаты 
		    		h.setY((int)e.getY());
		    		showInfo(h);                      // отображаем окно 
		    	}
		    	return;                             
			}
			
			if (e.getButton() == MouseButton.PRIMARY) {   // нажата лева€ кнопка мыши			
				// а если нажата лева€ кнопка, пробегаем по списку описанных ƒомов 
				for (House house : houseList.getList().values()) {
					Circle c = new Circle(house.getX(), house.getY(), 5);
					if (c.contains(e.getX(), e.getY())) {
						showInfo(house);          // и показываем инфу
					}
				}
			}
		});
		
		// пункт меню дл€ добавлени€ ƒома
		regionAddHouseItem.setOnAction(e -> {
			new DialogWindow(new String[] {"Yes"}, "Information", "Right-click on the map to select a location.", false, 350, 100).showAndWait();
		});
		
		// обработка меню дл€ House Members  
		regionHouseMembers.setOnAction(e -> {
			FXMLLoader loader = new FXMLLoader();
			loader.setLocation(getClass().getResource("houseMembers.fxml"));
			Parent infoWindow = null;
			try {
				infoWindow = loader.load();
			} catch (Exception ex) {
				System.out.println(ex.getMessage());
			}
			HouseMembers members = loader.getController();
			members.setHouseList(houseList);
						
			Stage stage = new Stage();
			stage.setTitle("Information about the members of the house");
			stage.setScene(new Scene(infoWindow, 600, 450));
			stage.initModality(Modality.APPLICATION_MODAL);
			stage.showAndWait(); 	
		});
		
	}
	
	private void showInfo(House house) {
		FXMLLoader loader = new FXMLLoader();
		loader.setLocation(getClass().getResource("houseInformation.fxml"));
		Parent infoWindow = null;

		try {
			infoWindow = loader.load();
		} catch (Exception ex) { 
			System.out.println(ex.getMessage());
		}
		
		HouseInformation houseInfo = loader.getController();
		houseInfo.setHouseList(houseList);	
		houseInfo.setHouse(house);		
				
		Stage stage = new Stage();	
		if (house.getName().equals("")) stage.setTitle("Input information about House");
		else stage.setTitle("Information");		
		stage.setScene(new Scene(infoWindow, 600, 450));
		stage.initModality(Modality.APPLICATION_MODAL);
		stage.showAndWait(); 	
	}

	@Override
	public void start(Stage primaryStage) throws IOException, SQLException {		
		FXMLLoader loaderMain = new FXMLLoader();
		loaderMain.setLocation(getClass().getResource("mainForm.fxml"));
		root = loaderMain.load();
		Scene scene = new Scene(root, 500, 700); 	
		primaryStage.setTitle("Game of Thrones");
        primaryStage.setScene(scene);
        primaryStage.show();		
	}
	
	public static void main(String[] args) {
		launch(args);
	}
	//------------------ event дл€ пунктов меню, выбора ƒома
	EventHandler<ActionEvent> ev = new EventHandler<ActionEvent>() {
		@Override
		public void handle(ActionEvent event) {
			MenuItem item = (MenuItem) event.getSource();
			showInfo(houseList.getList().get( item.getText() ));  // отображаем информацию о ƒоме
		}
	};

}
